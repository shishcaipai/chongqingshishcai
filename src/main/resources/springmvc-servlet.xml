<?xml version="1.0" encoding="UTF-8"?>
<!-- 注意下面不要忘记导入mvc、context的schema -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="   
http://www.springframework.org/schema/beans   
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd   
http://www.springframework.org/schema/mvc   
http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd   
http://www.springframework.org/schema/context   
http://www.springframework.org/schema/context/spring-context-3.0.xsd">
	<description>Spring-web MVC配置</description>
	<!-- 开启自动扫描包 -->
	<context:component-scan base-package="com.caijin.I000Wan.web" />
	<!-- 开启注解驱动 -->
	<mvc:annotation-driven />

	<!-- 在地址栏访问 "网站根路径 + /404",所跳转到的页面404.jsp -->
	<mvc:view-controller path="/404" view-name="404" />
	<mvc:view-controller path="/500" view-name="500" />
    <mvc:view-controller path="/register/*.html" view-name="redirect:/user/register" />
	<!-- 配置不用DispatcherServlet拦截的路径(例如：图片、CSS样式、js文件...): 路径可以自己设置，这里面我用static(WebRoot中的文件夹); 
		其中的"**"代表路径及其子路径 -->
	<mvc:resources location="/static/" mapping="/static/**" />


	<mvc:interceptors>
		<mvc:interceptor>
			<!-- 匹配的是url路径， 如果不配置或/**,将拦截所有的Controller -->
			<mvc:mapping path="/**" />
			<mvc:mapping path="/register/**" />
			<!-- 二级目录 -->
			<mvc:mapping path=" " />
			<!-- 需排除拦截的地址 -->
			<mvc:exclude-mapping path="/static/**" />
			<mvc:exclude-mapping path="/index" />
			<mvc:exclude-mapping path="/index/index" />
			<mvc:exclude-mapping path="/user/login" />
			<mvc:exclude-mapping path="/user/dologin" />
			<mvc:exclude-mapping path="/user/loginout" />
			<mvc:exclude-mapping path="/user/register" />
			<mvc:exclude-mapping path="/user/doregister" />
			<mvc:exclude-mapping path="/user/registersucess" />
			<mvc:exclude-mapping path="/boss/**" />
			<bean class="com.caijin.I000Wan.interceptor.CommonInterceptor"></bean>
		</mvc:interceptor>
		<!-- 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法 -->
	</mvc:interceptors>

	<!-- 配置视图解析器 -->
	<!-- <bean id="jspViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver"> -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="contentType" value="text/html;charset=UTF-8" />
		<!-- 上面的配置是固定的，下面两个配置意思是：如果你要访问index视图， 它会自动 prefix(前缀) + index + suffix(后缀), 
			生成/WEB-INF/views/index.jsp -->
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>

</beans>